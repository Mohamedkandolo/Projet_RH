# Generated by Django 5.2.3 on 2025-09-03 23:15

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActionDisciplinaire',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_faute', models.CharField(choices=[('RETARD', 'Retard'), ('ABSENCE', 'Absence injustifiée'), ('INDISCIPLINE', 'Indiscipline'), ('INSUBORDINATION', 'Insubordination'), ('NEGLIGENCE', 'Négligence'), ('AUTRE', 'Autre')], max_length=20)),
                ('description_faute', models.TextField(help_text='Description détaillée de la faute')),
                ('date_faute', models.DateField()),
                ('lieu_faute', models.CharField(blank=True, max_length=200, null=True)),
                ('date_notification', models.DateField(blank=True, null=True)),
                ('commission_disciplinaire', models.BooleanField(default=False)),
                ('date_commission', models.DateField(blank=True, null=True)),
                ('type_sanction', models.CharField(blank=True, choices=[('AVERTISSEMENT', 'Avertissement'), ('BLAME', 'Blâme'), ('SUSPENSION', 'Suspension'), ('RETROGRADATION', 'Rétrogradation'), ('REVOCATION', 'Révocation'), ('AUTRE', 'Autre')], max_length=20, null=True)),
                ('duree_sanction', models.PositiveIntegerField(blank=True, help_text='Durée en jours si applicable', null=True)),
                ('motif_sanction', models.TextField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('EN_COURS', 'En cours'), ('NOTIFIEE', 'Notifiée'), ('SANCTIONNEE', 'Sanctionnée'), ('CLASSEE', 'Classée sans suite')], default='EN_COURS', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Action disciplinaire',
                'verbose_name_plural': 'Actions disciplinaires',
                'ordering': ['-date_faute'],
            },
        ),
        migrations.CreateModel(
            name='Affectation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fonctions_exercees', models.TextField(help_text='Description des fonctions exercées')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField(blank=True, help_text='Date de fin si temporaire', null=True)),
                ('statut', models.CharField(choices=[('ACTIVE', 'Active'), ('TERMINEE', 'Terminée'), ('SUSPENDUE', 'Suspendue')], default='ACTIVE', max_length=20)),
                ('motif_affectation', models.TextField(blank=True, null=True)),
                ('decision_affectation', models.CharField(blank=True, max_length=200, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Affectation',
                'verbose_name_plural': 'Affectations',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('matricule', models.CharField(max_length=20, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenoms', models.CharField(max_length=200)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=200)),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1)),
                ('nationalite', models.CharField(default='Congolaise', max_length=100)),
                ('photo_identite', models.ImageField(blank=True, null=True, upload_to='photos_agents/')),
                ('numero_identification', models.CharField(blank=True, help_text="Numéro d'identification national/professionnel", max_length=50, null=True)),
                ('etat_civil', models.CharField(choices=[('CELIBATAIRE', 'Célibataire'), ('MARIE', 'Marié(e)'), ('DIVORCE', 'Divorcé(e)'), ('VEUF', 'Veuf/Veuve')], default='CELIBATAIRE', max_length=20)),
                ('nom_conjoint', models.CharField(blank=True, max_length=100, null=True)),
                ('nombre_enfants', models.PositiveIntegerField(default=0)),
                ('numero_securite_sociale', models.CharField(blank=True, max_length=50, null=True)),
                ('diplome_principal', models.CharField(blank=True, max_length=200, null=True)),
                ('etablissement_formation', models.CharField(blank=True, max_length=200, null=True)),
                ('annee_obtention', models.PositiveIntegerField(blank=True, null=True)),
                ('specialite', models.CharField(blank=True, max_length=200, null=True)),
                ('visite_medicale_aptitude', models.BooleanField(default=False)),
                ('date_visite_medicale', models.DateField(blank=True, null=True)),
                ('inaptitude_medicale', models.BooleanField(default=False)),
                ('restrictions_medicales', models.TextField(blank=True, help_text='Mentions confidentielles', null=True)),
                ('casier_judiciaire', models.BooleanField(default=False)),
                ('commentaires_juridiques', models.TextField(blank=True, help_text='Historique des condamnations ou litiges', null=True)),
                ('date_embauche', models.DateField()),
                ('date_nomination', models.DateField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('ACTIF', 'Actif'), ('INACTIF', 'Inactif'), ('RETRAITE', 'Retraité'), ('DEMISSIONNAIRE', 'Démissionnaire')], default='ACTIF', max_length=20)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('banque', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_compte', models.CharField(blank=True, max_length=50, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Agent',
                'verbose_name_plural': 'Agents',
                'ordering': ['nom', 'prenoms'],
            },
        ),
        migrations.CreateModel(
            name='BulletinPaie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_gains', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_retenues', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_cotisations', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('net_a_payer', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('nombre_jours_travailles', models.PositiveIntegerField(default=30)),
                ('nombre_heures_travaillees', models.DecimalField(decimal_places=2, default=173.33, max_digits=6)),
                ('date_calcul', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Bulletin de paie',
                'verbose_name_plural': 'Bulletins de paie',
                'ordering': ['periode', 'agent'],
            },
        ),
        migrations.CreateModel(
            name='Bureau',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Bureau',
                'verbose_name_plural': 'Bureaux',
                'ordering': ['direction', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('categorie', models.CharField(choices=[('TECHNIQUE', 'Technique'), ('MANAGERIALE', 'Managériale'), ('SPECIFIQUE', 'Spécifique'), ('GENERALE', 'Générale')], max_length=20)),
                ('description', models.TextField(help_text='Description détaillée de la compétence')),
                ('niveau_expertise', models.PositiveIntegerField(choices=[(1, 'Débutant'), (2, 'Intermédiaire'), (3, 'Avancé'), (4, 'Expert'), (5, 'Maître')], help_text="Niveau d'expertise requis")),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Compétence',
                'verbose_name_plural': 'Compétences',
                'ordering': ['categorie', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='CompetenceAgent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('niveau_maitrise', models.PositiveIntegerField(choices=[(1, 'Débutant'), (2, 'Intermédiaire'), (3, 'Avancé'), (4, 'Expert'), (5, 'Maître')], help_text="Niveau actuel de maîtrise de l'agent")),
                ('date_evaluation', models.DateField()),
                ('commentaires', models.TextField(blank=True, help_text='Observations sur le niveau de maîtrise', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': "Compétence d'agent",
                'verbose_name_plural': "Compétences d'agents",
                'ordering': ['agent', 'competence'],
            },
        ),
        migrations.CreateModel(
            name='Cotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('periode_evaluation', models.CharField(choices=[('SEMESTRIELLE', 'Semestrielle'), ('ANNUELLE', 'Annuelle'), ('EXCEPTIONNELLE', 'Exceptionnelle')], max_length=20)),
                ('annee', models.PositiveIntegerField()),
                ('semestre', models.PositiveIntegerField(blank=True, choices=[(1, '1er semestre'), (2, '2ème semestre')], null=True)),
                ('comportement_professionnel', models.DecimalField(decimal_places=2, help_text='Note sur 20', max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('assiduite', models.DecimalField(decimal_places=2, help_text='Note sur 20', max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('resultats_objectifs', models.DecimalField(decimal_places=2, help_text='Note sur 20', max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qualite_travail', models.DecimalField(decimal_places=2, help_text='Note sur 20', max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('esprit_equipe', models.DecimalField(decimal_places=2, help_text='Note sur 20', max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('note_globale', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('appreciations', models.TextField(help_text='Commentaires et appréciations générales')),
                ('points_forts', models.TextField(blank=True, null=True)),
                ('points_amelioration', models.TextField(blank=True, null=True)),
                ('date_validation', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cotation',
                'verbose_name_plural': 'Cotations',
                'ordering': ['-annee', '-semestre', 'agent'],
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Direction',
                'verbose_name_plural': 'Directions',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='ElementPaie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('type_element', models.CharField(choices=[('GAIN', 'Gain'), ('RETENUE', 'Retenue'), ('COTISATION', 'Cotisation')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('calculable', models.BooleanField(default=True, help_text="Si l'élément peut être calculé automatiquement")),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Élément de paie',
                'verbose_name_plural': 'Éléments de paie',
                'ordering': ['type_element', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('intitule', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('type_formation', models.CharField(choices=[('INTERNE', 'Formation interne'), ('EXTERNE', 'Formation externe'), ('CERTIFICATION', 'Certification'), ('CONFERENCE', 'Conférence/Séminaire')], max_length=20)),
                ('description', models.TextField(help_text='Description détaillée de la formation')),
                ('duree_heures', models.PositiveIntegerField(help_text='Durée en heures')),
                ('cout_estime', models.DecimalField(decimal_places=2, help_text='Coût estimé de la formation', max_digits=10)),
                ('lieu', models.CharField(blank=True, max_length=200, null=True)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('nombre_places', models.PositiveIntegerField(help_text='Nombre de places disponibles')),
                ('statut', models.CharField(choices=[('PLANIFIEE', 'Planifiée'), ('EN_COURS', 'En cours'), ('TERMINEE', 'Terminée'), ('ANNULEE', 'Annulée')], default='PLANIFIEE', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
                'ordering': ['-date_debut', 'intitule'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('niveau', models.PositiveIntegerField(help_text='Niveau hiérarchique du grade')),
                ('description', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Grade',
                'verbose_name_plural': 'Grades',
                'ordering': ['niveau', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='GrilleSalariale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Grille salariale',
                'verbose_name_plural': 'Grilles salariales',
                'ordering': ['grade', 'element_paie'],
            },
        ),
        migrations.CreateModel(
            name='HistoriquePaie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('donnees_archivees', models.JSONField(help_text='Données complètes du bulletin archivé')),
                ('date_archivage', models.DateTimeField(auto_now_add=True)),
                ('commentaire_archivage', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Historique de paie',
                'verbose_name_plural': 'Historiques de paie',
                'ordering': ['-date_archivage'],
            },
        ),
        migrations.CreateModel(
            name='MouvementPaie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=12)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Mouvement de paie',
                'verbose_name_plural': 'Mouvements de paie',
                'ordering': ['periode', 'agent', 'element_paie'],
            },
        ),
        migrations.CreateModel(
            name='Mutation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_mutation', models.CharField(choices=[('SERVICE', 'Changement de service'), ('MINISTERE', 'Changement de ministère'), ('ZONE_GEO', 'Changement de zone géographique'), ('FONCTION', 'Changement de fonction')], max_length=20)),
                ('date_mutation', models.DateField()),
                ('motif_mutation', models.TextField(help_text='Justification de la mutation')),
                ('decision_mutation', models.CharField(blank=True, max_length=200, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Mutation',
                'verbose_name_plural': 'Mutations',
                'ordering': ['-date_mutation'],
            },
        ),
        migrations.CreateModel(
            name='ParticipationFormation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('statut_participation', models.CharField(choices=[('INSCRIT', 'Inscrit'), ('EN_COURS', 'En cours'), ('TERMINEE', 'Terminée'), ('ABANDON', 'Abandon'), ('EXCLU', 'Exclu')], default='INSCRIT', max_length=20)),
                ('note_formation', models.DecimalField(blank=True, decimal_places=2, help_text='Note sur 20', max_digits=4, null=True)),
                ('appreciation_formation', models.TextField(blank=True, help_text='Appréciation de la formation', null=True)),
                ('impact_formation', models.TextField(blank=True, help_text='Impact sur les compétences', null=True)),
                ('mise_en_pratique', models.TextField(blank=True, help_text='Comment la formation est mise en pratique', null=True)),
                ('cout_participation', models.DecimalField(blank=True, decimal_places=2, help_text='Coût réel de la participation', max_digits=10, null=True)),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Participation à une formation',
                'verbose_name_plural': 'Participations aux formations',
                'ordering': ['-date_inscription'],
            },
        ),
        migrations.CreateModel(
            name='PeriodePaie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('annee', models.PositiveIntegerField()),
                ('mois', models.PositiveIntegerField(choices=[(1, 'Janvier'), (2, 'Février'), (3, 'Mars'), (4, 'Avril'), (5, 'Mai'), (6, 'Juin'), (7, 'Juillet'), (8, 'Août'), (9, 'Septembre'), (10, 'Octobre'), (11, 'Novembre'), (12, 'Décembre')])),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('statut', models.CharField(choices=[('OUVERTE', 'Ouverte'), ('FERMEE', 'Fermée'), ('ARCHIVEE', 'Archivée')], default='OUVERTE', max_length=20)),
                ('date_ouverture', models.DateTimeField(auto_now_add=True)),
                ('date_fermeture', models.DateTimeField(blank=True, null=True)),
                ('date_archivage', models.DateTimeField(blank=True, null=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Période de paie',
                'verbose_name_plural': 'Périodes de paie',
                'ordering': ['-annee', '-mois'],
            },
        ),
        migrations.CreateModel(
            name='PosteBudgetaire',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('intitule', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('type_poste', models.CharField(choices=[('PERMANENT', 'Permanent'), ('CONTRACTUEL', 'Contractuel'), ('STAGIAIRE', 'Stagiaire')], max_length=20)),
                ('missions', models.TextField(help_text='Missions et responsabilités du poste')),
                ('competences_requises', models.TextField(help_text='Compétences techniques et managériales requises')),
                ('position_hierarchique', models.CharField(help_text="Position dans l'organigramme", max_length=100)),
                ('pourvu', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Poste budgétaire',
                'verbose_name_plural': 'Postes budgétaires',
                'ordering': ['bureau', 'grade_requis', 'intitule'],
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_promotion', models.CharField(choices=[('GRADE', 'Promotion de grade'), ('ECHELON', "Avancement d'échelon"), ('FONCTION', 'Promotion fonctionnelle')], max_length=20)),
                ('date_promotion', models.DateField()),
                ('motif_promotion', models.TextField(help_text='Justification de la promotion')),
                ('anciennete_requise', models.PositiveIntegerField(help_text='Ancienneté requise en années')),
                ('notation_requise', models.DecimalField(decimal_places=2, help_text='Note minimale requise', max_digits=4)),
                ('decision_promotion', models.CharField(blank=True, max_length=200, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Promotion',
                'verbose_name_plural': 'Promotions',
                'ordering': ['-date_promotion'],
            },
        ),
    ]
